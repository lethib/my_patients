//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.14

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "patients")]
pub struct Model {
  pub created_at: DateTimeWithTimeZone,
  pub updated_at: DateTimeWithTimeZone,
  #[sea_orm(primary_key)]
  pub id: i32,
  #[sea_orm(unique)]
  pub ssn: String,
  #[sea_orm(unique)]
  pub pid: Uuid,
  #[sea_orm(unique)]
  pub hashed_ssn: String,
  pub first_name: String,
  pub last_name: String,
  pub address_line_1: String,
  pub address_zip_code: String,
  pub address_city: String,
  pub address_country: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
  #[sea_orm(has_many = "super::patient_users::Entity")]
  PatientUsers,
}

impl Related<super::patient_users::Entity> for Entity {
  fn to() -> RelationDef {
    Relation::PatientUsers.def()
  }
}
